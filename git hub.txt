#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

#include <stdlib.h>

 

struct node

{

	int value;

	struct node * next;

};

typedef struct node list;

typedef list * link;

 

link createnode(int num)

{

	link cur;

	cur = (link)malloc(sizeof(node));

	cur->value = (int)malloc(sizeof(int));

	cur->value = num;

	cur->next = NULL;

	return cur;

}

 

link append(link head, link cur)

{

	link nextnode = head;

	if (head == NULL)

	{

		head = cur;

		return head;

	}

	while (nextnode->next != NULL)

	{

		nextnode = nextnode->next;

	}

	nextnode->next = cur;

	return head;

}

 

link reverse(link head)

{

	link a, b, c;

	a = head;

	b = NULL;

	c = NULL;

	while (a != NULL)

	{

		c = b;

		b = a;

		a = a->next;

		b->next = c;

	}

	return b;

}

 

link remove(link head)

{

  link a, b, temp;

  temp=a->next;

	a = head;

	b = a->next->next;

	a->next = b;

      free(temp);

	return b;

}

 

void printlist(link head)

{

	link nextnode = head;

	while (nextnode != NULL)

	{

		printf("%d   ", nextnode->value);

		nextnode = nextnode->next;

	}

}

 

int main()

{

	link head = NULL;

	link cur = NULL;

	link tail = NULL;

	int num = 0;

	int count = 0;

	printf("정수값을 입력하세요.\n");

 

	while (scanf("%d", &num) != EOF)

	{

		cur = createnode(num);

		head = append(head, cur);

		count++;

	}

	printf("입력된 자료의 개수 : %d\n", count);

 

	tail = reverse(head);

	printf("역순 출력 : ");

	printlist(tail);

	printf("\n");

	cur = reverse(tail);

	link nextnode = cur;

	if (count % 2 == 1)						

	{

		for (int i = 0; i < count / 2; i++)

		{

			nextnode = nextnode->next;

		}

		printf("중간위치의 자료값 : %d\n", nextnode->value);

	}

	else

	{

		for (int i = 0; i < count / 2; i++)

		{

			nextnode = nextnode->next;

		}

		printf("중간위치의 자료값 : %d %d\n", nextnode->value, nextnode->next->value);

	}

 

	printf("입력순 출력 : ");

	printlist(head);

	printf("\n");

 

	head = head->next;

	link oddnode = head;

	for (int i = 0; i < (count / 2) ; i++)

	{

		oddnode = remove(oddnode);

	}

	printf("남은 자료 출력 : ");

	printlist(head);

	printf("\n");

	return 0;

}
